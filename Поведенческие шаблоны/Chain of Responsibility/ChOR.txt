=====================================================
Паттерн: Цепочка ответственности

=====================================================
Для чего нужен:

Для обработки запросов, идея в том, чтобы составить
цепочку обработчиков запросов, каждый из которых имеет
собственный сценарий обработки того или иного запроса и
при невозможности его выполнения данного запроса, он
должен передать этот запрос следующему в цепи.

=====================================================
Способы применения:

1. Логирование. Например, приходит сообщение в логгер,
и он пытается его обработать, и если это не получается
(например приоритет сообщения не тот), то он передаёт
это сообщение следующему логгеру.

2. Обработка исключений. С помощью данного паттерна
можно реализовать систему обработки исключений,
базированную на типе ошибок.

3. События на UI.

4. Обработка запросов.

5. Безопасность. Каждый обработчик может быть этапом
авторизации пользователя.